# In this directory, run the following command to build this builder.
# $ gcloud builds submit . --config=cloudbuild.yaml

steps:
# Build the alpine and debian versions.
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', 'Dockerfile.alpine', '--tag=gcr.io/$PROJECT_ID/go', '--tag=gcr.io/$PROJECT_ID/go:alpine', '.']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', 'Dockerfile.debian', '--tag=gcr.io/$PROJECT_ID/go:debian', '.']
  waitFor: ['-']

# Ensure that "go get" works
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['get', 'golang.org/x/net/context']
  env: ['GOPATH=/tmp']

# Test the examples.

- name: 'golang'
  args: ['go', 'build', '.']
  dir: 'examples/module'
- name: 'busybox'
  args: ['./module']
  dir: 'examples/module'

# examples/hello_world
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['test', '.']
  dir: 'examples/hello_world'
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['install', '.']
  dir: 'examples/hello_world'
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['build', '-o', 'hello', '.']
  dir: 'examples/hello_world'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '.']
  dir: 'examples/hello_world'

# examples/whole_workspace
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['test', 'src/hello/main.go']
  dir: 'examples/whole_workspace'
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['install', 'src/hello/main.go']
  dir: 'examples/whole_workspace'
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['build', '-o', 'hello', 'src/hello/main.go']
  dir: 'examples/whole_workspace'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '.']
  dir: 'examples/whole_workspace'

# examples/import_workspace
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['test', '.']
  dir: 'examples/import_workspace'
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['build', '-o', 'hello', '.']
  dir: 'examples/import_workspace'
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['install', '.']
  dir: 'examples/import_workspace'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '.']
  dir: 'examples/import_workspace'

# examples/nested_workspace
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['test', 'subproject/src/hello/main.go']
  dir: 'examples/nested_workspace'
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['install', 'subproject/src/hello/main.go']
  dir: 'examples/nested_workspace'
- name: 'gcr.io/$PROJECT_ID/go'
  args: ['build', '-o', 'hello', 'subproject/src/hello/main.go']
  dir: 'examples/nested_workspace'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '.']
  dir: 'examples/nested_workspace'

# examples/https_test
# with alpine/default
- name: 'gcr.io/$PROJECT_ID/go:alpine'
  args: ['install', '.']
  dir: 'examples/https_test'
- name: 'gcr.io/$PROJECT_ID/go:alpine'
  args: ['build', '-o', 'https_test', '.']
  dir: 'examples/https_test'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', 'Dockerfile.alpine', '--tag=https_test:alpine', '.']
  dir: 'examples/https_test'
- name: 'gcr.io/cloud-builders/docker'
  args: ['run', 'https_test:alpine']
# clear out the alpine binary.
- name: 'alpine'
  args: ['rm', 'https_test']
  dir: 'examples/https_test'
# with debian
- name: 'gcr.io/$PROJECT_ID/go:debian'
  args: ['build', '-o', 'https_test', '.']
  dir: 'examples/https_test'
- name: 'gcr.io/$PROJECT_ID/go:debian'
  args: ['install', '.']
  dir: 'examples/https_test'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', 'Dockerfile.ubuntu', '--tag=https_test:ubuntu', '.']
  dir: 'examples/https_test'
- name: 'gcr.io/cloud-builders/docker'
  args: ['run', 'https_test:ubuntu']

options:
  volumes:
  - name: go-modules
    path: /go
images:
- 'gcr.io/$PROJECT_ID/go'
- 'gcr.io/$PROJECT_ID/go:alpine'
- 'gcr.io/$PROJECT_ID/go:debian'
