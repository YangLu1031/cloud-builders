# In this directory, run the following command to build all cloud builders.
# gcloud builds submit --config=nightly-build.yaml --substitutions=_TRIGGER=manual

steps:
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-exEuo'
  - 'pipefail'
  - '-c'
  - |-
    # The nightly cron trigger executes from the root of the repository, so the
    # following conditional enables this build config to work correctly both
    # from the repository root and from within the `Beta` directory.
    [[ -d Beta ]] && cd Beta
    today=$(date +%Y%m%d) # for dated images
    template=nightly-template.yaml
    echo "tags:"             >> "${template}"
    echo "- \"${BUILD_ID}\"" >> "${template}"
    echo "- \"${today}\""    >> "${template}"
    echo "- ${_TRIGGER}"     >> "${template}"

    # Build each build step asynchronously and capture each buildid.
    declare -A build_ids
    for step in ${steps}; do
      stepconfig="cloudbuild-${step}.yaml"
      cp "${template}" "${stepconfig}"
      echo "- ${step}" >> "${stepconfig}"

      buildid=$(gcloud builds submit --config=${stepconfig} --substitutions=_YYYYMMDD=${today},_STEP=${step} ${step} --async \
        | tee /tmp/${step} | grep QUEUED | awk '{ print $1 }')
      cat /tmp/${step} # All output to main buildlog.

      build_ids[${step}]="${buildid}"
      echo "${step} buildID: ${buildid}"
    done

    # Now stream logs while the builds run.
    for step in ${steps}; do
      echo "Build logs for ${step}:"
      gcloud builds log --stream ${build_ids[$step]}
      echo "End of build logs for ${step}."
      echo
    done
options:
  env:
  - 'TZ=EST5EDT'
  - 'steps=bazel curl docker dotnet gcloud gcs-fetcher git gke-deploy go gradle gsutil helm javac kubectl kustomize mvn npm python skaffold terraform wget yarn'
timeout: 1200s
tags:
- "${_TRIGGER}"
